<Page x:Class="DailyAuditPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      mc:Ignorable="d" 
      Title="DailyAuditPage">
    <Page.Resources>
      
      <Style TargetType="CheckBox">
               <Setter Property="SnapsToDevicePixels" Value="False" />
               <Setter Property="OverridesDefaultStyle" Value="true" />
               <Setter Property="FocusVisualStyle" Value="{x:Null}" />
               <Setter Property="BorderBrush" Value="Gainsboro" />
               <Setter Property="Template">
                   <Setter.Value>
                       <ControlTemplate TargetType="CheckBox">
                           <BulletDecorator Background="Transparent">
                              <BulletDecorator.Bullet>
                                  <Border x:Name="Border"
                                          Width="15"
                                          Height="15"
                                          Background="{TemplateBinding Background}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="1"
                                          ClipToBounds="True">
                                    <Path x:Name="CheckMark"
                                            Height="13"
                                            Width="13"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="M 0 0 L 8 8 M 0 8 L 8 0"
                                            Stretch="Uniform"
                                            Stroke="Red"
                                            StrokeEndLineCap="Round"
                                            StrokeStartLineCap="Round"
                                            StrokeThickness="2"/>
                                      <!--<Border.Effect>
                                          <DropShadowEffect BlurRadius="3" ShadowDepth="1" Color="#FFE8E8E8" Direction="0"  />
                                      </Border.Effect>-->
                   
                                  </Border>
                              </BulletDecorator.Bullet>
                              <ContentPresenter Margin="0,0,0,0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                RecognizesAccessKey="True" />
                          </BulletDecorator>
                          <ControlTemplate.Triggers>
                              <Trigger Property="IsChecked" Value="false">
                                  <Setter TargetName="CheckMark" Property="Data" Value="M 0 0 L 8 8 M 0 8 L 8 0" />
                              <Setter TargetName="CheckMark" Property="Stroke" Value="Red" />
                              </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                  <Setter TargetName="CheckMark" Property="Data" Value="M 2,4 C 2,4 3,5 5,13 C 5,13 5,3 12,0" />
                            <Setter TargetName="CheckMark" Property="Stroke" Value="Green" />
                              </Trigger>
                              <Trigger Property="IsFocused" Value="true">
                                  <Setter Property="BorderBrush" Value="skyblue" />
                              </Trigger>
                              <Trigger Property="IsEnabled" Value="false">
                                  <Setter Property="BorderBrush" Value="Gray" />
                                  <Setter TargetName="CheckMark" Property="Stroke" Value="Gray" />
                              </Trigger>
                          </ControlTemplate.Triggers>
                     </ControlTemplate>
                  </Setter.Value>
              </Setter>
          </Style>

        <Style x:Key="checkboxdesign" TargetType="CheckBox">
            <Setter Property="SnapsToDevicePixels" Value="False" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="BorderBrush" Value="Gainsboro" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border"
                                          Width="15"
                                          Height="15"
                                          Background="{TemplateBinding Background}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="1"
                                          ClipToBounds="True">
                                    <Path x:Name="CheckMark"
                                            Height="13"
                                            Width="13"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="M 0 0 L 8 8 M 0 8 L 8 0"
                                            Stretch="Uniform"
                                            Stroke="Red"
                                            StrokeEndLineCap="Round"
                                            StrokeStartLineCap="Round"
                                            StrokeThickness="2"/>
                                    <!--<Border.Effect>
                                          <DropShadowEffect BlurRadius="3" ShadowDepth="1" Color="#FFE8E8E8" Direction="0"  />
                                      </Border.Effect>-->

                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="0,0,0,0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                RecognizesAccessKey="True" />
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Data" Value="M 0 0 L 8 8 M 0 8 L 8 0" />
                                <Setter TargetName="CheckMark" Property="Stroke" Value="Red" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Data" Value="M 2,4 C 2,4 3,5 5,13 C 5,13 5,3 12,0" />
                                <Setter TargetName="CheckMark" Property="Stroke" Value="Green" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="BorderBrush" Value="skyblue" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="BorderBrush" Value="Gray" />
                                <Setter TargetName="CheckMark" Property="Stroke" Value="Gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Foreground" Value="Gray"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                           Value="True">
                    <Setter Property="Background"
                               Value="DimGray" />
                    <Setter Property="Foreground"
                               Value="White" />
                </Trigger>
                
            </Style.Triggers>
        </Style>
        <!-- Scroll -->
        <SolidColorBrush x:Key="StandardBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="Black" />
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <SolidColorBrush x:Key="NormalBrush" Color="#888" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#FF686868" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />

        <LinearGradientBrush x:Key="ListBoxBackgroundBrush" StartPoint="0,0" EndPoint="1,0.001">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="White" Offset="0.0" />
                    <GradientStop Color="White" Offset="0.6" />
                    <GradientStop Color="#DDDDDD" Offset="1.2"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="StandardBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Name="Border" Margin="1" CornerRadius="2" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="1">
                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Black" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"  Width="8" Margin="8,0,-2,0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="0"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="0"/>
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" CornerRadius="2" Background="Transparent" />
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="{StaticResource HorizontalNormalBrush}" BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="18"/>
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3" CornerRadius="2" Background="#F0F0F0"/>
                <RepeatButton Grid.Column="0"  Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="1"/>
                            <ScrollBar Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="1" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- end of scroll -->
        <Style x:Key="RoundCorner" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="4" Background="#FF09A0C1">
                                <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold">
                                </ContentPresenter>
                            </Border>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FF005895"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FF09C2EA"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="{x:Type TextBoxBase}">
            <Border Background="{TemplateBinding Background}" 
                x:Name="Bd" BorderBrush="Gainsboro"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="15">
                <ScrollViewer x:Name="PART_ContentHost"/>
            </Border>

            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="Width" Value="Auto">
                    <Setter Property="MinWidth" Value="100"/>
                </Trigger>
                <Trigger Property="Height" Value="Auto">
                    <Setter Property="MinHeight" Value="20"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="styleDatePickerfrom" TargetType="{x:Type DatePicker}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePicker}">
                        <Grid x:Name="PART_Root">
                            <Grid.ColumnDefinitions>

                                <ColumnDefinition Width="5*" />

                            </Grid.ColumnDefinitions>

                            <DatePickerTextBox x:Name="PART_TextBox"
                                       BorderBrush="#FFFF7D00"
                                       TextAlignment="Center"
                                       HorizontalContentAlignment="Stretch"
                                       Padding="{TemplateBinding Padding}"
                                       VerticalContentAlignment="Center"
                                       Visibility="Visible"
                                       
                                               HorizontalAlignment="Stretch"
                                       Style="{DynamicResource styleDatePickerTextBox}" Background="{x:Null}" BorderThickness="1,1,0,1" Foreground="#FF1D1D1D">
                            </DatePickerTextBox>
                            <Viewbox HorizontalAlignment="Right">

                                <Button x:Name="PART_Button" VerticalAlignment="Stretch" >
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Image Name="buttonImage"
                               Height="Auto"
                               
                               Margin="0"
                               Source="..\..\..\Assets\Button\Calendar.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                                                            <Image.Effect>
                                                                <DropShadowEffect  Direction="290" Opacity=".6" ShadowDepth="1" Color="LightGray" BlurRadius="1"/>
                                                            </Image.Effect>
                                                        </Image>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\edit.png"></Setter>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Viewbox>

                            <TextBlock Text="from" Foreground="#FFFF7D00" VerticalAlignment="Stretch" Margin="0,10" HorizontalAlignment="left"  Background="#FFFF7D00" Padding="5" />
                            <TextBlock Foreground="White" Text="from"  VerticalAlignment="Center" Margin="0,10" HorizontalAlignment="left"  Background="#FFFF7D00" Padding="5,0" />

                            <Popup x:Name="PART_Popup" StaysOpen="False" AllowsTransparency="True" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="styleDatePickerto" TargetType="{x:Type DatePicker}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePicker}">
                        <Grid x:Name="PART_Root">
                            <Grid.ColumnDefinitions>

                                <ColumnDefinition Width="5*" />

                            </Grid.ColumnDefinitions>

                            <DatePickerTextBox x:Name="PART_TextBox"
                                       BorderBrush="#FFFF7D00"
                                       TextAlignment="Center"
                                       HorizontalContentAlignment="Stretch"
                                       Padding="{TemplateBinding Padding}"
                                       VerticalContentAlignment="Center"
                                       Visibility="Visible"
                                       
                                               HorizontalAlignment="Stretch"
                                       Style="{DynamicResource styleDatePickerTextBox}" Background="{x:Null}" BorderThickness="1,1,0,1" Foreground="#FF1D1D1D">
                            </DatePickerTextBox>
                            <Viewbox HorizontalAlignment="Right">

                                <Button x:Name="PART_Button" VerticalAlignment="Stretch" >
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Image Name="buttonImage"
                               Height="Auto"
                               
                               Margin="0"
                               Source="..\..\..\Assets\Button\Calendar.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                                                            <Image.Effect>
                                                                <DropShadowEffect  Direction="290" Opacity=".6" ShadowDepth="1" Color="LightGray" BlurRadius="1"/>
                                                            </Image.Effect>
                                                        </Image>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\edit.png"></Setter>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Viewbox>
                            <TextBlock Text="to     " Foreground="#FFFF7D00" VerticalAlignment="Stretch" Margin="0,10" HorizontalAlignment="left"  Background="#FFFF7D00" Padding="5" />
                            <TextBlock Foreground="White" Text="to     "  VerticalAlignment="Center" Margin="0,10" HorizontalAlignment="left"  Background="#FFFF7D00" Padding="5,0" >

                            </TextBlock>

                            <Popup x:Name="PART_Popup" StaysOpen="False" AllowsTransparency="True" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="styleDatePickerTextBox" TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="Background" Value="#FFA9ADAF"></Setter>
            <Setter Property="BorderBrush" Value="Transparent"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="IsEnabled" Value="True"></Setter>
            <Setter Property="IsReadOnly" Value="False"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Margin" Value="0,10"></Setter>


        </Style>
        <Style x:Key="ButtonAdd" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Name="buttonImage"
                               Height="Auto"
                               HorizontalAlignment="Right"
                               Margin="1"
                               Source="..\..\..\Assets\Button\addnew.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                            <!--<Image.Effect>
                                <DropShadowEffect  Direction="270" Opacity="0.6" ShadowDepth=".5" Color="Gray"/>
                            </Image.Effect>-->
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\addnewclick.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="ButtonSearch" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Name="buttonImage"
                               Height="Auto"
                               HorizontalAlignment="Right"
                               Margin="1"
                               Source="..\..\..\Assets\Button\search.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                            <Image.Effect>
                                <DropShadowEffect  Direction="290" Opacity="0.9" ShadowDepth="2" Color="LightGray"/>
                            </Image.Effect>
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\searchclick.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonPrint" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Name="buttonImage"
                               Height="Auto"
                               HorizontalAlignment="Right"
                               Margin="1"
                               Source="..\..\..\Assets\Button\Print.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                            <Image.Effect>
                                <DropShadowEffect  Direction="290" Opacity="0.9" ShadowDepth="2" Color="LightGray"/>
                            </Image.Effect>
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\PrintClick.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonPageNext" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Name="buttonImage"
                               Height="Auto"
                               HorizontalAlignment="Right"
                               Margin="1"
                               Source="..\..\..\Assets\Button\next.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                            <Image.Effect>
                                <DropShadowEffect  Direction="290" Opacity="0.6" ShadowDepth="1" Color="LightGray"/>
                            </Image.Effect>
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\nextclick.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonPageBack" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Name="buttonImage"
                               Height="Auto"
                               HorizontalAlignment="Right"
                               Margin="1"
                               Source="..\..\..\Assets\Button\back.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                            <Image.Effect>
                                <DropShadowEffect  Direction="290" Opacity="0.6" ShadowDepth="1" Color="LightGray"/>
                            </Image.Effect>
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\backclick.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="GridLinesVisibility" Value="All"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="VerticalGridLinesBrush" Value="Gainsboro"/>
            <Setter Property="HorizontalGridLinesBrush" Value="Gainsboro"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="CanUserReorderColumns" Value="False"/>
            <Setter Property="CanUserResizeColumns" Value="False"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="CanUserSortColumns" Value="False"/>
            <Setter Property="BorderBrush" Value="Gainsboro"/>
        </Style>
        <Style TargetType="{x:Type DataGridCell}">

            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        </Style>
        
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Foreground" Value="DimGray"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Background" Value="Transparent"/>

            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="Gainsboro"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="5"/>
        </Style>
        <Style x:Key="ColumnElementStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="5" />
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>
        <Style x:Key="buttonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="SteelBlue" />
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Width" Value="auto" />
            <Setter Property="Height" Value="auto" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Transparent">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">

                    <Setter Property="Background" Value="DimGray" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="15"
                  Background="White"
                  BorderBrush="Gainsboro"
                  BorderThickness="3" />
                <Border                   
                    Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                   IsEnabled="False"
                  Background="Transparent" 
                  BorderBrush="Gainsboro"
                  BorderThickness="0,0,1,0" />
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="DimGray"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />


            </Grid>
            <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}"/>
        </ControlTemplate>

        <Style x:Key="StyleComboBox" TargetType="{x:Type ComboBox}">

            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="DimGray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="5"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center" />

                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Center" 
                            VerticalAlignment="Center" 
                            Margin="0"
                            Focusable="True" 
                                     FontSize="12"
                            Background="Transparent"
                            Foreground="DimGray"
                            Visibility="Visible"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>

                            <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownBorder"
                                Background="#FF3F3F3F"

                                BorderThickness="1"
                                BorderBrush="#888888"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>

            </Style.Triggers>
        </Style>
        <!-- SimpleStyles: ComboBoxItem -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF4F4F4F"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Label}" x:Key="DateLabel5">
            <Setter Property="Foreground" Value="DimGray" />
            <Setter Property="Background" Value="#FFF1E4C1"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="BorderThickness" Value=".5"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="Height" Value="30" />
        </Style>
        <Style TargetType="{x:Type Label}" x:Key="DateLabel">
            <Setter Property="Foreground" Value="DimGray" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="BorderThickness" Value=".5"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="Height" Value="30" />
        </Style>
        <Style TargetType="{x:Type Label}" x:Key="DateLabel6">
            <Setter Property="Foreground" Value="DimGray" />
            <Setter Property="Background" Value="#FFC4F0FD"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="BorderThickness" Value=".5"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="Height" Value="30" />
        </Style>
        <Style TargetType="{x:Type Label}" x:Key="DateLabel4">
            <Setter Property="Foreground" Value="DimGray" />
            <Setter Property="Background" Value="#FFEAFFF7"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderThickness" Value=".5"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="Height" Value="auto" />
        </Style>
        <Style TargetType="{x:Type Label}" x:Key="DateLabel3">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />

            <Setter Property="BorderThickness" Value=".5"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="Height" Value="30" />
        </Style>
        <Style TargetType="{x:Type Label}" x:Key="DateLabel2">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Bottom" />

            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="Height" Value="30" />
        </Style>
    </Page.Resources>
    <Border Background="white" BorderBrush="Gainsboro" BorderThickness="1" CornerRadius="15">
        <Grid Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="1.5*"/>
                <RowDefinition Height="1.3*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="11*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="12*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <!--<Viewbox HorizontalAlignment="Left" Margin="10,10,0,10">
                            <Image Source="..\..\..\Assets\Icon\SabaIcon.png" />
                        </Viewbox>-->
                    </Grid>
                    <Grid Grid.Column="1">
                        <Viewbox HorizontalAlignment="Left">
                            <TextBlock TextWrapping="Wrap" Padding="0" Text="Daily Workplace Audit" Margin="0,7,0,7" Foreground="DimGray"/>
                        </Viewbox>
                    </Grid>
                </Grid>
                <Grid Grid.Column="1">
                    <Viewbox Margin="10" HorizontalAlignment="Right" VerticalAlignment="Center">
                        <Button Click="btnCreate_Click" Visibility="Collapsed" Style="{DynamicResource ButtonAdd}" x:Name="btnCreate" BorderBrush="{x:Null}"/>
                    </Viewbox>
                </Grid>
            </Grid>
            <Grid Grid.Row="1">
                <Grid Grid.Row="1" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <TextBlock x:Name="lblYear" FontSize="16" Foreground="DimGray" FontWeight="Bold" VerticalAlignment="Center" Margin="15,0,0,0"/>
                    </Grid>
                    <Grid Grid.Column="3">
                        <ComboBox Style="{DynamicResource StyleComboBox}" MinWidth="140" Height="30" x:Name="cbYear" Margin="10"/>
                        <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2">
                            <Viewbox Margin="15,15,0,15">
                                <Image IsHitTestVisible="False" Source="..\..\..\Assets\Icon\search.png"/>
                            </Viewbox>

                            <TextBlock Margin="8,0,5,0" FontSize="11" IsHitTestVisible="False" Text="Select Fiscal Year" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="DarkGray">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, ElementName=cbYear}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Grid>
            <Grid Grid.Row="2" Background="Transparent">

                
                
                
                <Border Height="30" VerticalAlignment="Bottom" Background="DimGray" BorderThickness="0" CornerRadius="15,15,0,0" Grid.ColumnSpan="3">

                    <Label Style="{StaticResource DateLabel2}" x:Name="lblWeekNo" Content="Week # 1"/>
                </Border>

            </Grid>
            <Grid Grid.Row="3">
                
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20*"/>
                    <ColumnDefinition Width="20*"/>
                    <ColumnDefinition Width="20*"/>
                    <ColumnDefinition Width="15*"/>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="5*"/>
                </Grid.ColumnDefinitions>
                
                <Grid Grid.Column="0" Grid.Row="0" Background="#FF70E6B6">
                    <Label Content="DEPARTMENT" Style="{StaticResource DateLabel3}"/>
                </Grid>
                <Grid Grid.Column="0" Grid.Row="1" Grid.RowSpan="2">
                    <Label x:Name="lblDept" Style="{StaticResource DateLabel4}" Content="RETAIL SERVICES"/>
                </Grid>

                <Grid Grid.Column="1" Grid.Row="0" Background="#FF70E6B6">
                    <Label Content="PERIOD" Style="{StaticResource DateLabel3}"/>
                </Grid>
                <Grid Grid.Column="1" Grid.Row="1" Grid.RowSpan="2">
                    <Label x:Name="lblPeriod" Style="{StaticResource DateLabel4}"/>
                </Grid>

                <Grid Grid.Column="2" Grid.Row="0" Background="#FF70E6B6">
                    <Label Content="OWNER" Style="{StaticResource DateLabel3}"/>
                </Grid>
                <Grid Grid.Column="2" Grid.Row="1" Grid.RowSpan="2">
                    <Label x:Name="lblOwner" Style="{StaticResource DateLabel4}"/>
                </Grid>

                <Grid Grid.Column="3" Grid.Row="0" Background="Gainsboro">
                    <Label FontSize="9" Content="DAY" Foreground="White" Style="{StaticResource DateLabel}" Background="#FFEABE48"/>
                </Grid>
                <Grid Grid.Column="3" Grid.Row="1" Background="Gainsboro">
                    <Label FontSize="9" Content="DATE" Foreground="White" Background="#FF8AD4EA" Style="{StaticResource DateLabel}"/>
                </Grid>
                <Grid Grid.Column="3" Grid.Row="2" Background="Gainsboro">
                    <Label FontSize="9" Content="REMARKS" Style="{StaticResource DateLabel}"/>
                </Grid>

                <Grid Grid.Column="4" Grid.Row="1">
                    <Label x:Name="lblMonday" Style="{StaticResource DateLabel6}" Content="DD-MMM" />
                </Grid>
                <Grid Grid.Column="4" Grid.Row="0">
                    <Label Style="{StaticResource DateLabel5}" Content="M" />
                </Grid>
                <Grid Grid.Column="4" Grid.Row="2">
                 <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" />
                
                </Grid>
                <Grid Grid.Column="5" Grid.Row="2">
                    <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" />

                </Grid>
                <Grid Grid.Column="6" Grid.Row="2">
                    <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" />

                </Grid>
                <Grid Grid.Column="7" Grid.Row="2">
                    <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" />

                </Grid>
                <Grid Grid.Column="8" Grid.Row="2">
                    <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" />

                </Grid>

                <Grid Grid.Column="5" Grid.Row="1">
                    <Label x:Name="lblTuesday" Style="{StaticResource DateLabel6}" Content="DD-MMM" />
                </Grid>
                <Grid Grid.Column="5" Grid.Row="0">
                    <Label Style="{StaticResource DateLabel5}" Content="T" />
                </Grid>

                <Grid Grid.Column="6" Grid.Row="1">
                    <Label x:Name="lblWednesday" Style="{StaticResource DateLabel6}" Content="DD-MMM" />
                </Grid>
                <Grid Grid.Column="6" Grid.Row="0">
                    <Label Style="{StaticResource DateLabel5}" Content="W" />
                </Grid>

                <Grid Grid.Column="7" Grid.Row="1">
                    <Label x:Name="lblThursday" Style="{StaticResource DateLabel6}" Content="DD-MMM" />
                </Grid>
                <Grid Grid.Column="7" Grid.Row="0">
                    <Label Style="{StaticResource DateLabel5}" Content="TH" />
                </Grid>

                <Grid Grid.Column="8" Grid.Row="1">
                    <Label x:Name="lblFriday" Style="{StaticResource DateLabel6}" Content="DD-MMM" />
                </Grid>
                <Grid Grid.Column="8" Grid.Row="0">
                    <Label Style="{StaticResource DateLabel5}" Content="F" />
                </Grid>
                
                <Grid Grid.Row="3" Grid.ColumnSpan="9">
                    <DataGrid Background="white" x:Name="DailyDataGrid" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Header="DAILY CHECKS (for the current day)" Binding="{Binding MESSAGE,Mode=TwoWay}" FontWeight="Bold" Width="60*" IsReadOnly="True"/>
                            <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Header="" Width="15*" Binding="{Binding EMPLOYEE,Mode=TwoWay}" IsReadOnly="True"/>
                            <!-- Monday Checkbox -->
                            <DataGridTemplateColumn x:Name="MondayCB" Width="5*" IsReadOnly="False">
                                <DataGridTemplateColumn.CellTemplate >
                                    <DataTemplate>
                                        <CheckBox VerticalAlignment="Center" HorizontalAlignment="Center" Style="{DynamicResource checkboxdesign}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                          <!-- Tuesday Checkbox -->
                            <DataGridTemplateColumn x:Name="TuesdayCB" Width="5*" IsReadOnly="False">
                                <DataGridTemplateColumn.CellTemplate >
                                    <DataTemplate>
                                        <CheckBox VerticalAlignment="Center" HorizontalAlignment="Center" Style="{DynamicResource checkboxdesign}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <!-- Wednesday Checkbox -->
                            <DataGridTemplateColumn x:Name="WednesdayCB" Width="5*" IsReadOnly="False">
                                <DataGridTemplateColumn.CellTemplate >
                                    <DataTemplate>
                                        <CheckBox VerticalAlignment="Center" HorizontalAlignment="Center" Style="{DynamicResource checkboxdesign}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                              <!-- Thursday Checkbox -->
                            <DataGridTemplateColumn x:Name="ThursdayCB" Width="5*" IsReadOnly="False">
                                <DataGridTemplateColumn.CellTemplate >
                                    <DataTemplate>
                                        <CheckBox VerticalAlignment="Center" HorizontalAlignment="Center" Style="{DynamicResource checkboxdesign}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <!-- Friday Checkbox -->
                            <!--<DataGridCheckBoxColumn x:Name="FridayCB" IsReadOnly="False" Width="5*">
                                
                            </DataGridCheckBoxColumn>-->
                            <DataGridTemplateColumn x:Name="FridayCB" Width="5*" IsReadOnly="False">
                                <DataGridTemplateColumn.CellTemplate >
                                    <DataTemplate>
                                        <CheckBox VerticalAlignment="Center" HorizontalAlignment="Center" Style="{DynamicResource checkboxdesign}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Grid>
           
        </Grid>
    </Border>
</Page>
