<Page x:Class="ThreeC_Page"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      mc:Ignorable="d" 
      Height="auto" Width="auto"
      Title="ThreeC_Page">
    <Page.Resources>

        <Style x:Key="RoundCorner" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="4" Background="#FF404040">
                                <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold">
                                </ContentPresenter>
                            </Border>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FF303030"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FF919191"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="styleDatePickerfrom" TargetType="{x:Type DatePicker}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePicker}">
                        <Grid x:Name="PART_Root">
                            <Grid.ColumnDefinitions>
                                
                                <ColumnDefinition Width="5*" />
                                
                            </Grid.ColumnDefinitions>
                            
                            <DatePickerTextBox x:Name="PART_TextBox"
                                       BorderBrush="#FF4E4E50"
                                              
                                       TextAlignment="Center"
                                       HorizontalContentAlignment="Stretch"
                                       Padding="{TemplateBinding Padding}"
                                       VerticalContentAlignment="Center"
                                       Visibility="Visible"
                                       
                                               HorizontalAlignment="Stretch"
                                       Style="{DynamicResource styleDatePickerTextBox}" Background="{x:Null}" BorderThickness="0.5" Foreground="#FF1D1D1D">
                            </DatePickerTextBox>
                            <Viewbox HorizontalAlignment="Right">
                            
                            <Button x:Name="PART_Button" VerticalAlignment="Stretch" >
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Image Name="buttonImage"
                               Height="Auto"
                               
                               Margin="0,10,0,15"
                               Source="..\..\..\Assets\Button\Calendar.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                                                        <Image.Effect>
                                                            <DropShadowEffect  Direction="290" Opacity=".6" ShadowDepth="1" Color="LightGray" BlurRadius="1"/>
                                                        </Image.Effect>
                                                    </Image>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\CalendarClick.png"></Setter>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                            </Button>
                            </Viewbox>

                            <TextBlock Text="from" Foreground="#FFFF7D00" VerticalAlignment="Stretch" Margin="0,10" HorizontalAlignment="left"  Background="#FF4E4E50" Padding="5" />
                            <TextBlock Foreground="White" Text="from"  VerticalAlignment="Center" Margin="0,10" HorizontalAlignment="left"  Background="#FF4E4E50" Padding="5,0" />

                            <Popup x:Name="PART_Popup" StaysOpen="False" AllowsTransparency="True" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="styleDatePickerto" TargetType="{x:Type DatePicker}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePicker}">
                        <Grid x:Name="PART_Root">
                            <Grid.ColumnDefinitions>

                                <ColumnDefinition Width="5*" />

                            </Grid.ColumnDefinitions>

                            <DatePickerTextBox x:Name="PART_TextBox"
                                       BorderBrush="#FF4E4E50"
                                       TextAlignment="Center"
                                       HorizontalContentAlignment="Stretch"
                                       Padding="{TemplateBinding Padding}"
                                       VerticalContentAlignment="Center"
                                       Visibility="Visible"
                                       
                                               HorizontalAlignment="Stretch"
                                       Style="{DynamicResource styleDatePickerTextBox}" Background="{x:Null}" BorderThickness="0.5" Foreground="#FF1D1D1D">
                            </DatePickerTextBox>
                            <Viewbox HorizontalAlignment="Right">

                                <Button x:Name="PART_Button" VerticalAlignment="Stretch" >
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Image Name="buttonImage"
                               Height="Auto"
                               
                               Margin="0,10,0,15"
                               Source="..\..\..\Assets\Button\Calendar.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                                                            <Image.Effect>
                                                                <DropShadowEffect  Direction="290" Opacity=".6" ShadowDepth="1" Color="LightGray" BlurRadius="1"/>
                                                            </Image.Effect>
                                                        </Image>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\CalendarClick.png"></Setter>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Viewbox>
                            <TextBlock Text="to     " Foreground="#FFFF7D00" VerticalAlignment="Stretch" Margin="0,10" HorizontalAlignment="left"  Background="#FF4E4E50" Padding="5" />
                            <TextBlock Foreground="White" Text="to     "  VerticalAlignment="Center" Margin="0,10" HorizontalAlignment="left"  Background="#FF4E4E50" Padding="5,0" >
                                
                            </TextBlock>

                            <Popup x:Name="PART_Popup" StaysOpen="False" AllowsTransparency="True" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="styleDatePickerTextBox" TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="Background" Value="#FFA9ADAF"></Setter>
            <Setter Property="BorderBrush" Value="Transparent"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="IsEnabled" Value="True"></Setter>
            <Setter Property="IsReadOnly" Value="False"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Margin" Value="0,10"></Setter>


        </Style>
        <Style x:Key="ButtonAdd" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Name="buttonImage"
                               Height="Auto"
                               HorizontalAlignment="Right"
                               Margin="1"
                               Source="..\..\..\Assets\Button\addnew.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                            <Image.Effect>
                                <DropShadowEffect  Direction="290" Opacity="0.6" ShadowDepth="1" Color="Black"/>
                            </Image.Effect>
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\addnewclick.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="ButtonSearch" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Name="buttonImage"
                               Height="Auto"
                               HorizontalAlignment="Right"
                               Margin="1"
                               Source="..\..\..\Assets\Button\search.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                            <Image.Effect>
                                <DropShadowEffect  Direction="290" Opacity="0.9" ShadowDepth="2" Color="LightGray"/>
                            </Image.Effect>
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\searchclick.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonPrint" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Name="buttonImage"
                               Height="Auto"
                               HorizontalAlignment="Right"
                               Margin="1"
                               Source="..\..\..\Assets\Button\Print.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                            <Image.Effect>
                                <DropShadowEffect  Direction="290" Opacity="0.9" ShadowDepth="2" Color="LightGray"/>
                            </Image.Effect>
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\PrintClick.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonPageNext" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Name="buttonImage"
                               Height="Auto"
                               HorizontalAlignment="Right"
                               Margin="1"
                               Source="..\..\..\Assets\Button\next.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                            <Image.Effect>
                                <DropShadowEffect  Direction="290" Opacity="0.6" ShadowDepth="1" Color="LightGray"/>
                            </Image.Effect>
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\nextclick.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonPageBack" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Name="buttonImage"
                               Height="Auto"
                               HorizontalAlignment="Right"
                               Margin="1"
                               Source="..\..\..\Assets\Button\back.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                            <Image.Effect>
                                <DropShadowEffect  Direction="290" Opacity="0.6" ShadowDepth="1" Color="LightGray"/>
                            </Image.Effect>
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\backclick.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="GridLinesVisibility" Value="All"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="VerticalGridLinesBrush" Value="White"/>
            <Setter Property="HorizontalGridLinesBrush" Value="White"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
        </Style>
        <Style TargetType="{x:Type DataGridCell}">

            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Background" Value="#FF4DB6AC"/>
            
            <Setter Property="BorderThickness" Value="0,0,1,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="5"/>
        </Style>
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="white" />
            <Setter Property="Foreground" Value="#FF303030"/>


            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                           Value="True">
                    <Setter Property="Background"
                               Value="LightGray" />
                    
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ColumnElementStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="5" />
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>
        <Style x:Key="buttonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="SteelBlue" />
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Width" Value="auto" />
            <Setter Property="Height" Value="auto" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Transparent">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">

                    <Setter Property="Background" Value="DimGray" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TextboxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="Gainsboro"/>

        </Style>
        <ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="{x:Type TextBoxBase}">
            <Border Background="{TemplateBinding Background}" 
                x:Name="Bd" BorderBrush="#FFA4A4A4"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
                <ScrollViewer x:Name="PART_ContentHost"/>
            </Border>

            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="Width" Value="Auto">
                    <Setter Property="MinWidth" Value="100"/>
                </Trigger>
                <Trigger Property="Height" Value="Auto">
                    <Setter Property="MinHeight" Value="20"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="PagebuttonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="SteelBlue"/>
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Width" Value="auto" />
            <Setter Property="Height" Value="auto" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Transparent">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">

                    <Setter Property="Background" Value="Gainsboro" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </Page.Resources>
    <Border Background="white" BorderBrush="Gainsboro" BorderThickness="1" CornerRadius="15">
        <Grid Margin="5">
          
          
                <Grid.RowDefinitions>
                <RowDefinition Height="1.5*"/>
                <RowDefinition Height="1.5*"/>
                <RowDefinition Height="10*"/>
                <RowDefinition Height="1*"/>


            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Background="White">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10*"/>
                    <ColumnDefinition Width="1*"/>

                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="12*"/>

                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Viewbox HorizontalAlignment="Left" Margin="5,5,0,5" >
                            <Image Source="..\..\..\Assets\Button\measure.png" />
                        </Viewbox>

                    </Grid>

                    <Grid Grid.Column="1">
                        <Viewbox HorizontalAlignment="Left">
                            <TextBlock TextWrapping="Wrap" Padding="0" Text="Concern, Cause and Countermeasure" Margin="0,7,0,7" Foreground="DimGray"/>
                        </Viewbox>
                    </Grid>

                </Grid>
                <Grid Grid.Column="1">
                    <Viewbox Margin="15">
                        <Button Style="{DynamicResource ButtonAdd}" Click="btnCreateNew3C" x:Name="btnCreate" BorderBrush="{x:Null}" ToolTip="Add new 3C">

                        </Button>
                    </Viewbox>
                </Grid>

            </Grid>

            <Grid Grid.Row="1" Background="#FFFBFBFB">
                <Grid.ColumnDefinitions>

                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="6*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">

                </Grid>
                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=".5*"/>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width=".2*"/>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="1.5*"/>
                        <ColumnDefinition Width=".1*"/>


                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">

                    </Grid>
                    <Grid Grid.Column="1">
                        <StackPanel Orientation="Horizontal">
                        <TextBlock Text="From" Margin="0,0,5,0" VerticalAlignment="Center"/>
                            <DatePicker Margin="5,17,2.5,17" Text="From" x:Name="dtpFrom" Height="auto" Width="Auto"/>
                        </StackPanel>
                    </Grid>
                    <Grid Grid.Column="2">

                    </Grid>
                    <Grid Grid.Column="3">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="To" VerticalAlignment="Center" Margin="0,0,5,0"/>
                        <DatePicker Margin="2.5,17,5,17" Text="To" x:Name="dtpTo" Width="auto" Height="auto" IsEnabled="False"/>
                        </StackPanel>
                    </Grid>
                    <Grid Grid.Column="4">
                        <Viewbox Margin="10,15">
                            <Button Style="{DynamicResource RoundCorner}" Click="btnFilter" Width="auto" Height="auto" >
                                <Viewbox>
                                    <TextBlock Text="search" Foreground="White" Margin="6" Padding="5,0"/>
                                </Viewbox>
                            </Button>
                        </Viewbox>
                    </Grid>


                </Grid>
                <Grid Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="4*"/>

                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Viewbox>
                            <TextBlock TextWrapping="Wrap" Text="Search" Margin="0,18,0,18" 
                                   Foreground="DimGray" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </Viewbox>
                    </Grid>
                    <Grid Grid.Column="1">

                        <TextBox Margin="0,17,0,17" Name="txtSearch" 
                             Template="{DynamicResource TextBoxBaseControlTemplate}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Width="auto" Height="auto" >

                        </TextBox>

                    </Grid>

                </Grid>

            </Grid>

            <Grid Grid.Row="2" Background="White">

                <DataGrid x:Name="ThreeC_DataGridView" ItemsSource="{Binding ConcernList}"
                          SelectedItem="{Binding SelectedConcern}" IsReadOnly="True" 
                          Height="auto" Width="auto" 
                          AutoGenerateColumns="False" BorderBrush="Transparent">

                    <DataGrid.Columns>
                        <DataGridTextColumn  ElementStyle="{StaticResource ColumnElementStyle}" Binding="{Binding REF_ID}" Header="Ref. No." Width="1.5*" />
                        <DataGridTextColumn  ElementStyle="{StaticResource ColumnElementStyle}"  Binding="{Binding CONCERN}" Header="Concern" Width="2*"/>
                        <DataGridTextColumn  ElementStyle="{StaticResource ColumnElementStyle}"  Binding="{Binding CAUSE }" Header="Cause" Width="2*"></DataGridTextColumn>
                        <DataGridTextColumn  ElementStyle="{StaticResource ColumnElementStyle}"  Binding="{Binding COUNTERMEASURE}" Header="Countermeasure" Width="2*"></DataGridTextColumn>
                        <DataGridTextColumn  ElementStyle="{StaticResource ColumnElementStyle}"  Binding="{Binding EMP_ID}" Header="Owner" Width="1*"></DataGridTextColumn>
                        <DataGridTextColumn  ElementStyle="{StaticResource ColumnElementStyle}"  Binding="{Binding ACT_REFERENCE}" Header="Action Ref." Width="1.5*"></DataGridTextColumn>
                        <DataGridTextColumn  ElementStyle="{StaticResource ColumnElementStyle}"  Binding="{Binding DUE_DATE, StringFormat=\{0:dd-MM-yyyy \}}" Header="Due Date" Width="1.2*"></DataGridTextColumn>
                        <DataGridTextColumn  ElementStyle="{StaticResource ColumnElementStyle}"  Binding="{Binding STATUS}" Header="Status" Width="1*"></DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>


            </Grid>
            <Grid Grid.Row="3" Background="White">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width=".8*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10*"/>
                            <ColumnDefinition Width="30*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="10*"/>
                            <ColumnDefinition Width="35*"/>
                            <ColumnDefinition Width="30*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0">
                            <Viewbox>
                                <Label HorizontalAlignment="Left" Background="White" BorderBrush="DimGray" BorderThickness="1" Margin="5"></Label>
                            </Viewbox>
                        </Grid>
                        <Grid Grid.Column="1">
                            <Viewbox HorizontalAlignment="Left">
                                <Label Foreground="DimGray" Content="Open/Close" VerticalAlignment="Center"/>
                            </Viewbox>
                        </Grid>
                        <Grid Grid.Column="2">

                        </Grid>
                        <Grid Grid.Column="3">

                            <Viewbox>
                                <Label HorizontalAlignment="Left" Background="#FFFDECCE" BorderBrush="DimGray" Margin="5"></Label>
                            </Viewbox>
                        </Grid>
                        <Grid Grid.Column="4">
                            <Viewbox HorizontalAlignment="Left">
                                <Label Foreground="DimGray" Content="Due date today and Open" VerticalAlignment="Center"/>
                            </Viewbox>
                        </Grid>
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10*"/>
                            <ColumnDefinition Width="30*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="10*"/>
                            <ColumnDefinition Width="35*"/>
                            <ColumnDefinition Width="30*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0">
                            <Viewbox>
                                <Label BorderBrush="DimGray"  HorizontalAlignment="Left" Background="#CCFFD8D8" Margin="5"></Label>
                            </Viewbox>
                        </Grid>
                        <Grid Grid.Column="1">
                            <Viewbox HorizontalAlignment="Left">
                                <Label Foreground="DimGray" Content="Overdue and Open" VerticalAlignment="Center"/>
                            </Viewbox>
                        </Grid>
                        <Grid Grid.Column="2">

                        </Grid>
                        <Grid Grid.Column="3">

                        </Grid>
                        <Grid Grid.Column="4">

                        </Grid>
                    </Grid>
                </Grid>


                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width=".2*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Button Height="auto" Width="auto"  Margin="5"
                            x:Name="btnPrev" Style="{DynamicResource ButtonPageBack}" BorderBrush="{x:Null}" >

                        </Button>
                    </Grid>
                    <Grid Grid.Column="1">

                    </Grid>
                    <Grid Grid.Column="2">
                        <Button Height="auto" Width="auto" Margin="5" 
                             x:Name="btnNext" Style="{DynamicResource ButtonPageNext}" BorderBrush="{x:Null}">

                        </Button>
                    </Grid>
                </Grid>
                <Grid Grid.Column="2" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="6*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width=".3*"/>


                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0"></Grid>
                    <Grid Grid.Column="1">
                        <Button Style="{DynamicResource ButtonPrint}" x:Name="btnPrint" Content="Print" HorizontalAlignment="Right"  Margin="10,5,10,5" VerticalAlignment="Center" >

                        </Button>
                    </Grid>

                </Grid>
            </Grid>
            <!--<Grid.Effect>
            <DropShadowEffect Color="#FFD6D6D6"  Direction="290" Opacity="0.5" ShadowDepth="2"/>
        </Grid.Effect>-->

            </Grid>


    </Border>

</Page>
