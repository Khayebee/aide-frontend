<Page x:Class="ThreeC_UpdatePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      mc:Ignorable="d" 
     Height="auto" Width="auto"
      Title="ThreeC_UpdatePage">
    <Page.Resources>
        <Style x:Key="RoundCorner" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="4" Background="DimGray">
                                <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold">
                                </ContentPresenter>
                            </Border>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="dimgray"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FF817F7F"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="styleDatePickerfrom" TargetType="{x:Type DatePicker}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePicker}">
                        <Grid x:Name="PART_Root">
                            <Grid.ColumnDefinitions>

                                <ColumnDefinition Width="5*" />

                            </Grid.ColumnDefinitions>

                            <DatePickerTextBox x:Name="PART_TextBox"
                                       BorderBrush="#FF4E4E50"
                                              
                                       TextAlignment="Center"
                                       HorizontalContentAlignment="Stretch"
                                       Padding="{TemplateBinding Padding}"
                                       VerticalContentAlignment="Center"
                                       Visibility="Visible"
                                       
                                               HorizontalAlignment="Stretch"
                                       Style="{DynamicResource styleDatePickerTextBox}" Background="{x:Null}" BorderThickness="0.5" Foreground="#FF1D1D1D">
                            </DatePickerTextBox>
                            <Viewbox HorizontalAlignment="Right">

                                <Button x:Name="PART_Button" VerticalAlignment="Stretch" >
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Image Name="buttonImage"
                               Height="Auto"
                               
                               Margin="0,10,0,15"
                               Source="..\..\..\Assets\Button\Calendar.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                                                            <Image.Effect>
                                                                <DropShadowEffect  Direction="290" Opacity=".6" ShadowDepth="1" Color="LightGray" BlurRadius="1"/>
                                                            </Image.Effect>
                                                        </Image>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\CalendarClick.png"></Setter>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Viewbox>

                            <TextBlock Text="from" Foreground="#FFFF7D00" VerticalAlignment="Stretch" Margin="0,10" HorizontalAlignment="left"  Background="#FF4E4E50" Padding="5" />
                            <TextBlock Foreground="White" Text="from"  VerticalAlignment="Center" Margin="0,10" HorizontalAlignment="left"  Background="#FF4E4E50" Padding="5,0" />

                            <Popup x:Name="PART_Popup" StaysOpen="False" AllowsTransparency="True" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="styleDatePickerto" TargetType="{x:Type DatePicker}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePicker}">
                        <Grid x:Name="PART_Root">
                            <Grid.ColumnDefinitions>

                                <ColumnDefinition Width="5*" />

                            </Grid.ColumnDefinitions>

                            <DatePickerTextBox x:Name="PART_TextBox"
                                       BorderBrush="#FF4E4E50"
                                       TextAlignment="Center"
                                       HorizontalContentAlignment="Stretch"
                                       Padding="{TemplateBinding Padding}"
                                       VerticalContentAlignment="Center"
                                       Visibility="Visible"
                                       
                                               HorizontalAlignment="Stretch"
                                       Style="{DynamicResource styleDatePickerTextBox}" Background="{x:Null}" BorderThickness="0.5" Foreground="#FF1D1D1D">
                            </DatePickerTextBox>
                            <Viewbox HorizontalAlignment="Right">

                                <Button x:Name="PART_Button" VerticalAlignment="Stretch" >
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Image Name="buttonImage"
                               Height="Auto"
                               
                               Margin="0,10,0,15"
                               Source="..\..\..\Assets\Button\Calendar.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                                                            <Image.Effect>
                                                                <DropShadowEffect  Direction="290" Opacity=".6" ShadowDepth="1" Color="LightGray" BlurRadius="1"/>
                                                            </Image.Effect>
                                                        </Image>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\CalendarClick.png"></Setter>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Viewbox>
                            <TextBlock Text="to     " Foreground="#FFFF7D00" VerticalAlignment="Stretch" Margin="0,10" HorizontalAlignment="left"  Background="#FF4E4E50" Padding="5" />
                            <TextBlock Foreground="White" Text="to     "  VerticalAlignment="Center" Margin="0,10" HorizontalAlignment="left"  Background="#FF4E4E50" Padding="5,0" >

                            </TextBlock>

                            <Popup x:Name="PART_Popup" StaysOpen="False" AllowsTransparency="True" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="styleDatePickerTextBox" TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="Background" Value="#FFA9ADAF"></Setter>
            <Setter Property="BorderBrush" Value="Transparent"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="IsEnabled" Value="True"></Setter>
            <Setter Property="IsReadOnly" Value="False"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Margin" Value="0,10"></Setter>


        </Style>
        <Style x:Key="ButtonAdd" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Name="buttonImage"
                               Height="Auto"
                               HorizontalAlignment="Right"
                               Margin="1"
                               Source="..\..\..\Assets\Button\addnew.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                            <Image.Effect>
                                <DropShadowEffect  Direction="290" Opacity="0.6" ShadowDepth="1" Color="Black"/>
                            </Image.Effect>
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\addnewclick.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="ButtonMinus" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Name="buttonImage"
                               Height="Auto"
                               HorizontalAlignment="Right"
                               Margin="1"
                               Source="..\..\..\Assets\Button\minus.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                            <Image.Effect>
                                <DropShadowEffect  Direction="290" Opacity="0.6" ShadowDepth="1" Color="Black"/>
                            </Image.Effect>
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\minusclick.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="ButtonBack" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Name="buttonImage"
                               Height="Auto"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               
                               Source="..\..\..\Assets\Button\closebtn.png"
                               Stretch="Fill">
                            <Image.Effect>
                                <DropShadowEffect  Direction="290" Opacity="0.6" ShadowDepth="1" Color="Black"/>
                            </Image.Effect>
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\closebtnhover.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="ButtonSearch" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Name="buttonImage"
                               Height="Auto"
                               HorizontalAlignment="Right"
                               Margin="1"
                               Source="..\..\..\Assets\Button\search.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                            <Image.Effect>
                                <DropShadowEffect  Direction="290" Opacity="0.9" ShadowDepth="2" Color="LightGray"/>
                            </Image.Effect>
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\searchclick.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonPrint" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Name="buttonImage"
                               Height="Auto"
                               HorizontalAlignment="Right"
                               Margin="1"
                               Source="..\..\..\Assets\Button\Print.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                            <Image.Effect>
                                <DropShadowEffect  Direction="290" Opacity="0.9" ShadowDepth="2" Color="LightGray"/>
                            </Image.Effect>
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\PrintClick.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonPageNext" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Name="buttonImage"
                               Height="Auto"
                               HorizontalAlignment="Right"
                               Margin="1"
                               Source="..\..\..\Assets\Button\next.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                            <Image.Effect>
                                <DropShadowEffect  Direction="290" Opacity="0.6" ShadowDepth="1" Color="LightGray"/>
                            </Image.Effect>
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\nextclick.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonPageBack" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Name="buttonImage"
                               Height="Auto"
                               HorizontalAlignment="Right"
                               Margin="1"
                               Source="..\..\..\Assets\Button\back.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                            <Image.Effect>
                                <DropShadowEffect  Direction="290" Opacity="0.6" ShadowDepth="1" Color="LightGray"/>
                            </Image.Effect>
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\backclick.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="GridLinesVisibility" Value="All"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="VerticalGridLinesBrush" Value="White"/>
            <Setter Property="HorizontalGridLinesBrush" Value="White"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
        </Style>
        <Style TargetType="{x:Type DataGridCell}">

            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Background" Value="#FF4DB6AC"/>

            <Setter Property="BorderThickness" Value="0,0,1,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="left"/>
            <Setter Property="Padding" Value="5"/>
        </Style>
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="white" />
            <Setter Property="Foreground" Value="#FF303030"/>


            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                           Value="True">
                    <Setter Property="Background"
                               Value="LightGray" />

                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ColumnElementStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="5" />
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>
        <Style x:Key="buttonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="SteelBlue" />
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Width" Value="auto" />
            <Setter Property="Height" Value="auto" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Transparent">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">

                    <Setter Property="Background" Value="DimGray" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TextboxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="Gainsboro"/>

        </Style>
        <ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="{x:Type TextBoxBase}">
            <Border Background="{TemplateBinding Background}" 
                x:Name="Bd" BorderBrush="#FFA4A4A4"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
                <ScrollViewer x:Name="PART_ContentHost"/>
            </Border>

            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="Width" Value="Auto">
                    <Setter Property="MinWidth" Value="100"/>
                </Trigger>
                <Trigger Property="Height" Value="Auto">
                    <Setter Property="MinHeight" Value="20"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="PagebuttonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="SteelBlue"/>
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Width" Value="auto" />
            <Setter Property="Height" Value="auto" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Transparent">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">

                    <Setter Property="Background" Value="Gainsboro" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </Page.Resources>

    <Border Background="white" BorderBrush="Gainsboro" BorderThickness="1" CornerRadius="15">
        <Grid Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="10*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="8*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Viewbox HorizontalAlignment="Left">
                        <TextBlock Padding="10,0,0,0" Text="Update 3C" Margin="5" Foreground="DimGray"/>

                    </Viewbox>
                </Grid>
                <Grid Grid.Column="1">
                    <Viewbox Margin="15">
                <Button Name="BackBtn" Style="{DynamicResource ButtonBack}" Click="btnBackClick">
                    
                </Button>
                    </Viewbox>
                </Grid>
        </Grid>

        <Grid Grid.Row="1" Background="AliceBlue">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1.5*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1.1*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" ShowGridLines="false">
                <Grid.RowDefinitions>
                    <RowDefinition Height="3*"/>
                    <RowDefinition Height="10*"/>
                    <RowDefinition Height=".5*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Border Margin="30,20,30,15" CornerRadius="5" BorderThickness="3,3,3,3">
                        <Border.BorderBrush>
                            <DrawingBrush Viewport="0,0,10,10" ViewportUnits="Absolute" TileMode="Tile">
                                <DrawingBrush.Drawing>
                                    <DrawingGroup>
                                        <GeometryDrawing Brush="DimGray">
                                            <GeometryDrawing.Geometry>
                                                <GeometryGroup>
                                                    <RectangleGeometry Rect="0,0,50,50"/>
                                                    <RectangleGeometry Rect="50,50,50,50"/>

                                                    <RectangleGeometry Rect="50,50,50,50"/>
                                                </GeometryGroup>
                                            </GeometryDrawing.Geometry>
                                        </GeometryDrawing>
                                    </DrawingGroup>
                                </DrawingBrush.Drawing>
                            </DrawingBrush>
                        </Border.BorderBrush>
                        <Viewbox>

                            <TextBlock TextWrapping="Wrap" Margin="10" 
                                   x:Name="txtRefID" Text="{Binding SelectedConcern.REF_ID, Mode=TwoWay}"/>
                        </Viewbox>
                    </Border>
                </Grid>
                <Grid Grid.Row="1">

                    <Grid.RowDefinitions>

                        <RowDefinition Height="2*"/>
                        <RowDefinition Height=".4*"/>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height=".4*"/>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height=".4*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height=".4*"/>
                        <RowDefinition Height="1.2*"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <TextBox Text="{Binding SelectedConcern.CONCERN, Mode=TwoWay}" 
                             TextWrapping="Wrap" Margin="30,10,30,0"
                             HorizontalContentAlignment="Center" Template="{DynamicResource TextBoxBaseControlTemplate}" VerticalContentAlignment="Center"/>
                    </Grid>
                    <Grid Grid.Row="1">
                        <Viewbox>
                            <TextBlock Text="(Concern)" Margin="10,0,10,0" TextWrapping="Wrap" Foreground="DimGray"/>
                        </Viewbox>
                    </Grid>
                    <Grid Grid.Row="2">
                        <TextBox Text="{Binding SelectedConcern.CAUSE, Mode=TwoWay}" 
                             Margin="30,10,30,0" Template="{DynamicResource TextBoxBaseControlTemplate}" HorizontalContentAlignment="Center"/>
                    </Grid>
                    <Grid Grid.Row="3">
                        <Viewbox>
                            <TextBlock Text="(Cause)" Margin="10,0,10,0" TextWrapping="Wrap" Foreground="DimGray"/>
                        </Viewbox>
                    </Grid>
                    <Grid Grid.Row="4">
                        <TextBox Text="{Binding SelectedConcern.COUNTERMEASURE, Mode=TwoWay}" 
                             Margin="30,10,30,0" HorizontalContentAlignment="Center" Template="{DynamicResource TextBoxBaseControlTemplate}" />
                    </Grid>
                    <Grid Grid.Row="5">
                        <Viewbox>
                            <TextBlock Text="(Countermeasure)" Margin="10,0,10,0" TextWrapping="Wrap" Foreground="DimGray"/>
                        </Viewbox>
                    </Grid>

                    <Grid Grid.Row="6">
                        <DatePicker Text="{Binding SelectedConcern.DUE_DATE, Mode=TwoWay}" 
                                Margin="30,10,30,0"/>
                    </Grid>
                    <Grid Grid.Row="7">
                        <Viewbox>
                            <TextBlock Text="(Due Date)" Margin="10,0,10,0" TextWrapping="Wrap" Foreground="DimGray"/>
                        </Viewbox>
                    </Grid>
                    <Grid Grid.Row="8">
                        <Button Style="{DynamicResource RoundCorner}" Margin="30,5,30,5"
                                x:Name="btnReload"  Click="btnSaveClick" >
                            <Viewbox>
                                <TextBlock Text="Update" TextWrapping="Wrap" Margin="7"/>
                            </Viewbox>
                        </Button>
                    </Grid>
                </Grid>

            </Grid>
            <Grid Grid.Column="1" Margin="0,0,15,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1.5*"/>
                    <RowDefinition Height="10*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height=".5*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Margin="0,20,0,0">
                    <Viewbox HorizontalAlignment="Left">
                        <TextBlock TextWrapping="Wrap" Text="My Action Reference" Margin="0,10,0,10" Foreground="SteelBlue"/>
                    </Viewbox>
                </Grid>
                <Grid Grid.Row="1">
                    <DataGrid AutoGenerateColumns="False" x:Name="lv" Margin="0" 
                      Width="auto" BorderBrush="Transparent" 
                      ItemsSource="{Binding ListOfActionInConcern}" 
                      SelectedItem="{Binding GetSelectedAction}"
                      SelectedValuePath="Key">
                        <DataGrid.Columns>
                            <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Header="Ref. No." Width="1*" Binding="{Binding ACTREF}" IsReadOnly="True"/>
                            <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Header="Action Ref."  Width="1*" Binding="{Binding ACTION_REFERENCES}" IsReadOnly="True"/>
                            
                        </DataGrid.Columns>
                    </DataGrid>

                    <!--<ListView x:Name="lv" ItemsSource="{Binding ListOfActionInConcern}" Foreground="Black" SelectedItem="{Binding GetSelectedAction}"  SelectedValuePath="Key" Width="auto"  >
                        <ListView.View>
                            <GridView>

                                <GridViewColumn Header="Ref No." DisplayMemberBinding="{Binding ACTREF}"   Width="auto"/>
                                <GridViewColumn Header="Action References" DisplayMemberBinding="{Binding ACTION_REFERENCES}"   Width="auto"/>

                            </GridView>
                        </ListView.View>
                    </ListView>-->
                </Grid>
                <Grid Grid.Row="2">
                        <Viewbox HorizontalAlignment="Right">
                            <Button Style="{DynamicResource ButtonMinus}" Click="btnRemoveSelectedAction">
                                
                            </Button>
                        </Viewbox>
                    </Grid>
            </Grid>
            <Grid Grid.Column="2" Margin="15,0,30,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1.5*"/>
                    <RowDefinition Height="10*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height=".5*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Margin="0,20,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="3.5*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Viewbox HorizontalAlignment="Left">
                            <TextBlock TextWrapping="Wrap" Text="Search" Margin="0,10,0,10" Foreground="DimGray"/>
                        </Viewbox>
                    </Grid>
                        <Grid Grid.Column="1">
                            
                            <TextBox Margin="2,5,0,5" x:Name="txtSearchAction" 
                                HorizontalContentAlignment="Center" Template="{DynamicResource TextBoxBaseControlTemplate}"/>
                
                        </Grid>
                    
                </Grid>
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="9*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Viewbox HorizontalAlignment="Left">
                            <TextBlock TextWrapping="Wrap" Text="All Action Reference" Margin="0,10,0,10" Foreground="SteelBlue"/>
                        </Viewbox>
                    </Grid>
                    <Grid Grid.Row="1">
                        <DataGrid AutoGenerateColumns="False" x:Name="lvACtion" Margin="0" 
                      Width="auto" BorderBrush="Transparent" 
                      ItemsSource="{Binding listAction}" 
                      SelectedItem="{Binding GetSelectedAction}"
                      SelectedValuePath="Key">
                            <DataGrid.Columns>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Header="Action Message"  Width="1*" Binding="{Binding ACT_MESSAGE}" IsReadOnly="True"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                    
                </Grid>
                <Grid Grid.Row="2">
                        <Viewbox Margin="5" HorizontalAlignment="Right">
                            <Button Style="{DynamicResource ButtonAdd}" Click="btnSaveActionRef">
                                <Viewbox>
                                    <TextBlock Text="Add" TextWrapping="Wrap" Margin="5"/>
                                </Viewbox>
                            </Button>
                        </Viewbox>
                    </Grid>
            </Grid>
        </Grid>


        </Grid>
      </Border>
</Page>
