<Page x:Class="NewProject"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      mc:Ignorable="d" 
      Width="auto" Height="auto"
      Title="NewProject">
    <Page.Resources>
        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="Black"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RoundCorner" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="4" Background="DimGray">
                                <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold">
                                </ContentPresenter>
                            </Border>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="dimgray"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FF817F7F"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RoundCornerCreate" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="4" Background="#FF09A0C1">
                                <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold">
                                </ContentPresenter>
                            </Border>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FF005895"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FF09C2EA"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="styleDatePickerfrom" TargetType="{x:Type DatePicker}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePicker}">
                        <Grid x:Name="PART_Root">
                            <Grid.ColumnDefinitions>

                                <ColumnDefinition Width="5*" />

                            </Grid.ColumnDefinitions>

                            <DatePickerTextBox x:Name="PART_TextBox"
                                       BorderBrush="#FF4E4E50"
                                              
                                       TextAlignment="Center"
                                       HorizontalContentAlignment="Stretch"
                                       Padding="{TemplateBinding Padding}"
                                       VerticalContentAlignment="Center"
                                       Visibility="Visible"
                                       
                                               HorizontalAlignment="Stretch"
                                       Style="{DynamicResource styleDatePickerTextBox}" Background="{x:Null}" BorderThickness="0.5" Foreground="#FF1D1D1D">
                            </DatePickerTextBox>
                            <Viewbox HorizontalAlignment="Right">

                                <Button x:Name="PART_Button" VerticalAlignment="Stretch" >
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Image Name="buttonImage"
                               Height="Auto"
                               
                               Margin="0,10,0,15"
                               Source="..\..\..\Assets\Button\Calendar.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                                                            <Image.Effect>
                                                                <DropShadowEffect  Direction="290" Opacity=".6" ShadowDepth="1" Color="LightGray" BlurRadius="1"/>
                                                            </Image.Effect>
                                                        </Image>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\CalendarClick.png"></Setter>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Viewbox>

                            <TextBlock Text="from" Foreground="#FFFF7D00" VerticalAlignment="Stretch" Margin="0,10" HorizontalAlignment="left"  Background="#FF4E4E50" Padding="5" />
                            <TextBlock Foreground="White" Text="from"  VerticalAlignment="Center" Margin="0,10" HorizontalAlignment="left"  Background="#FF4E4E50" Padding="5,0" />

                            <Popup x:Name="PART_Popup" StaysOpen="False" AllowsTransparency="True" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="styleDatePickerto" TargetType="{x:Type DatePicker}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePicker}">
                        <Grid x:Name="PART_Root">
                            <Grid.ColumnDefinitions>

                                <ColumnDefinition Width="5*" />

                            </Grid.ColumnDefinitions>

                            <DatePickerTextBox x:Name="PART_TextBox"
                                       BorderBrush="#FF4E4E50"
                                       TextAlignment="Center"
                                       HorizontalContentAlignment="Stretch"
                                       Padding="{TemplateBinding Padding}"
                                       VerticalContentAlignment="Center"
                                       Visibility="Visible"
                                       
                                               HorizontalAlignment="Stretch"
                                       Style="{DynamicResource styleDatePickerTextBox}" Background="{x:Null}" BorderThickness="0.5" Foreground="#FF1D1D1D">
                            </DatePickerTextBox>
                            <Viewbox HorizontalAlignment="Right">

                                <Button x:Name="PART_Button" VerticalAlignment="Stretch" >
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Image Name="buttonImage"
                               Height="Auto"
                               
                               Margin="0,10,0,15"
                               Source="..\..\..\Assets\Button\Calendar.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                                                            <Image.Effect>
                                                                <DropShadowEffect  Direction="290" Opacity=".6" ShadowDepth="1" Color="LightGray" BlurRadius="1"/>
                                                            </Image.Effect>
                                                        </Image>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\CalendarClick.png"></Setter>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Viewbox>
                            <TextBlock Text="to     " Foreground="#FFFF7D00" VerticalAlignment="Stretch" Margin="0,10" HorizontalAlignment="left"  Background="#FF4E4E50" Padding="5" />
                            <TextBlock Foreground="White" Text="to     "  VerticalAlignment="Center" Margin="0,10" HorizontalAlignment="left"  Background="#FF4E4E50" Padding="5,0" >

                            </TextBlock>

                            <Popup x:Name="PART_Popup" StaysOpen="False" AllowsTransparency="True" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="styleDatePickerTextBox" TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="Background" Value="#FFA9ADAF"></Setter>
            <Setter Property="BorderBrush" Value="Transparent"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="IsEnabled" Value="True"></Setter>
            <Setter Property="IsReadOnly" Value="False"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Margin" Value="0,10"></Setter>


        </Style>
        <Style x:Key="ButtonAdd" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Name="buttonImage"
                               Height="Auto"
                               HorizontalAlignment="Right"
                               Margin="1"
                               Source="..\..\..\Assets\Button\addnew.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                            <Image.Effect>
                                <DropShadowEffect  Direction="290" Opacity="0.6" ShadowDepth="1" Color="Black"/>
                            </Image.Effect>
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\addnewclick.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="ButtonMinus" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Name="buttonImage"
                               Height="Auto"
                               HorizontalAlignment="Right"
                               Margin="1"
                               Source="..\..\..\Assets\Button\minus.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                            <Image.Effect>
                                <DropShadowEffect  Direction="290" Opacity="0.6" ShadowDepth="1" Color="Black"/>
                            </Image.Effect>
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\minusclick.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="ButtonBack" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Name="buttonImage"
                               Height="Auto"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               
                               Source="..\..\..\Assets\Button\closebtn.png"
                               Stretch="Fill">
                            <Image.Effect>
                                <DropShadowEffect  Direction="290" Opacity="0.6" ShadowDepth="1" Color="Black"/>
                            </Image.Effect>
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\closebtnhover.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="ButtonSearch" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Name="buttonImage"
                               Height="Auto"
                               HorizontalAlignment="Right"
                               Margin="1"
                               Source="..\..\..\Assets\Button\search.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                            <Image.Effect>
                                <DropShadowEffect  Direction="290" Opacity="0.9" ShadowDepth="2" Color="LightGray"/>
                            </Image.Effect>
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\searchclick.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonPrint" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Name="buttonImage"
                               Height="Auto"
                               HorizontalAlignment="Right"
                               Margin="1"
                               Source="..\..\..\Assets\Button\Print.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                            <Image.Effect>
                                <DropShadowEffect  Direction="290" Opacity="0.9" ShadowDepth="2" Color="LightGray"/>
                            </Image.Effect>
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\PrintClick.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonPageNext" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Name="buttonImage"
                               Height="Auto"
                               HorizontalAlignment="Right"
                               Margin="1"
                               Source="..\..\..\Assets\Button\next.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                            <Image.Effect>
                                <DropShadowEffect  Direction="290" Opacity="0.6" ShadowDepth="1" Color="LightGray"/>
                            </Image.Effect>
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\nextclick.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonPageBack" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Name="buttonImage"
                               Height="Auto"
                               HorizontalAlignment="Right"
                               Margin="1"
                               Source="..\..\..\Assets\Button\back.png"
                               Stretch="Fill"
                               VerticalAlignment="Stretch"
                               Width="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}">
                            <Image.Effect>
                                <DropShadowEffect  Direction="290" Opacity="0.6" ShadowDepth="1" Color="LightGray"/>
                            </Image.Effect>
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonImage"
                                        Property="Source"
                                        Value="..\..\..\Assets\Button\backclick.png"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="GridLinesVisibility" Value="All"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="VerticalGridLinesBrush" Value="White"/>
            <Setter Property="HorizontalGridLinesBrush" Value="White"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
        </Style>
        <Style TargetType="{x:Type DataGridCell}">

            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Background" Value="#FF4DB6AC"/>

            <Setter Property="BorderThickness" Value="0,0,1,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="left"/>
            <Setter Property="Padding" Value="5"/>
        </Style>
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="white" />
            <Setter Property="Foreground" Value="#FF303030"/>


            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                           Value="True">
                    <Setter Property="Background"
                               Value="LightGray" />

                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ColumnElementStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="5" />
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>
        <Style x:Key="buttonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="SteelBlue" />
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Width" Value="auto" />
            <Setter Property="Height" Value="auto" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Transparent">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">

                    <Setter Property="Background" Value="DimGray" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TextboxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="Gainsboro"/>

        </Style>
        <ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="{x:Type TextBoxBase}">
            <Border Background="{TemplateBinding Background}" 
                x:Name="Bd" BorderBrush="#FFA4A4A4"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
                <ScrollViewer x:Name="PART_ContentHost"/>
            </Border>

            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="Width" Value="Auto">
                    <Setter Property="MinWidth" Value="100"/>
                </Trigger>
                <Trigger Property="Height" Value="Auto">
                    <Setter Property="MinHeight" Value="20"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="PagebuttonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="SteelBlue"/>
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Width" Value="auto" />
            <Setter Property="Height" Value="auto" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Transparent">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">

                    <Setter Property="Background" Value="Gainsboro" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </Page.Resources>
    <Border Background="white" BorderBrush="Gainsboro" BorderThickness="1" CornerRadius="15">
        <Grid Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="1.5*"/>
                <RowDefinition Height="12.5*"/>


            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Viewbox HorizontalAlignment="Left">
                        <TextBlock Padding="10,0,0,0" Text="Assign Projects" Margin="5" Foreground="DimGray"/>

                    </Viewbox>
                </Grid>
                <Grid Grid.Column="1">
                    <Viewbox Margin="15">
                        <Button Name="BackBtn" Click="BackBtn_Click" Style="{DynamicResource ButtonBack}" >
                            <Viewbox>
                                <TextBlock Text="Back"  Foreground="White" Margin="10"/>
                            </Viewbox>
                        </Button>
                    </Viewbox>

                </Grid>
            </Grid>
            <Grid Grid.Row="1" Background="AliceBlue">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1.5*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    
                   
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height=".4*"/>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height=".4*"/>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height=".4*"/>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height=".4*"/>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="1*"/>
                                </Grid.RowDefinitions>

                                <Grid Grid.Row="1">
                                    <ComboBox x:Name="cbProjectName" Margin="30,10,30,5"
                                          IsEditable="True" IsReadOnly="True" Text="Select Project" 
                                          ItemsSource="{Binding ProjectList}" DisplayMemberPath="ProjectName" 
                                          SelectedValue="{Binding SelectedProject}"
                                          SelectedValuePath="ProjectID"/>
                                </Grid>
                                <Grid Grid.Row="2">
                                    <Viewbox>
                                        <TextBlock Text="(Project Name)" Margin="10,0,10,5" TextWrapping="Wrap" Foreground="DimGray"/>
                                    </Viewbox>
                                </Grid>
                                <Grid Grid.Row="3">
                                    <TextBox Template="{DynamicResource TextBoxBaseControlTemplate}" Text="{Binding SelectedProject.ProjectID}" TextWrapping="Wrap" Margin="30,10,30,5" 
                                         MaxLines="255" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                                </Grid>
                                <Grid Grid.Row="4">
                                    <Viewbox>
                                        <TextBlock Text="(Project ID)" Margin="10,0,10,5" TextWrapping="Wrap" Foreground="DimGray"/>
                                    </Viewbox>
                                </Grid>
                                <Grid Grid.Row="5">
                                    <TextBox Template="{DynamicResource TextBoxBaseControlTemplate}" IsEnabled="False" Text="{Binding SelectedProject.Category}" TextWrapping="Wrap" Margin="30,10,30,5" 
                                         MaxLines="255" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                                </Grid>
                                <Grid Grid.Row="6">
                                    <Viewbox>
                                        <TextBlock Text="(Category)" Margin="10,0,10,5" TextWrapping="Wrap" Foreground="DimGray"/>
                                    </Viewbox>
                                </Grid>
                                <Grid Grid.Row="7">
                        <TextBox Template="{DynamicResource TextBoxBaseControlTemplate}" IsEnabled="False" Text="{Binding SelectedProject.Billability}" TextWrapping="Wrap" Margin="30,10,30,5" 
                                         MaxLines="255" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                                </Grid>
                                <Grid Grid.Row="8">
                                    <Viewbox>
                                        <TextBlock Text="(Billability)" Margin="10,0,10,5" TextWrapping="Wrap" Foreground="DimGray"/>
                                    </Viewbox>
                                </Grid>

                                <Grid Grid.Row="9">
                        <Button Style="{DynamicResource RoundCornerCreate }" Command="{Binding CreateCommand}"  Margin="30,5" >
                            <Viewbox>
                                <TextBlock Text="Create" TextWrapping="Wrap" Margin="5"/>
                            </Viewbox>
                        </Button>
                    </Grid>
                    <Grid Grid.Row="10">
                        <Button Style="{DynamicResource RoundCorner}" Command="{Binding ClearCommand}" IsEnabled="{Binding ClearMode}" Margin="30,5" >
                            <Viewbox>
                                <TextBlock Text="Clear" TextWrapping="Wrap" Margin="5"/>
                            </Viewbox>
                        </Button>
                    </Grid>

                   
                      
                    </Grid>
                <Grid Grid.Column="1" Margin="0,0,15,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1.5*"/>
                        <RowDefinition Height="10*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height=".5*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Margin="0,20,0,0">
                        <Viewbox HorizontalAlignment="Left">
                            <TextBlock TextWrapping="Wrap" Text="List of Assignee" Margin="0,10,0,10" Foreground="SteelBlue"/>
                        </Viewbox>
                    </Grid>
                    <Grid Grid.Row="1">
                        <DataGrid AutoGenerateColumns="False" 
                      Width="auto" BorderBrush="Gainsboro" 
                      ItemsSource="{Binding EmployeeLists}" 
                      SelectedItem="{Binding SelectedEmployees}"
                      SelectedValuePath="Key">
                            <DataGrid.Columns>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Header="Name" Width="1*" Binding="{Binding Name}" IsReadOnly="True"/>

                            </DataGrid.Columns>
                        </DataGrid>

                    </Grid>
                    <Grid Grid.Row="2">
                        <Viewbox Margin="5" HorizontalAlignment="Right">
                            <Button Style="{DynamicResource ButtonAdd}" Command="{Binding AddCommand}" IsEnabled="{Binding AddMode}" x:Name="btnAdd">
                                
                            </Button>
                        </Viewbox>
                    </Grid>
                </Grid>
                <Grid Grid.Column="2" Margin="15,0,30,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1.5*"/>
                        <RowDefinition Height="10*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height=".5*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Margin="0,20,0,0">
                        <Viewbox HorizontalAlignment="Left">
                            <TextBlock TextWrapping="Wrap" Text="List of Assignee" Margin="0,10,0,10" Foreground="SteelBlue"/>
                        </Viewbox>
                    </Grid>
                    <Grid Grid.Row="1">
                        <DataGrid AutoGenerateColumns="False" 
                      Width="auto" BorderBrush="Gainsboro" 
                      ItemsSource="{Binding AssignedEmployeeLists}" 
                      SelectedItem="{Binding SelectedAssignedEmployees}"
                      SelectedValuePath="Key">
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="*" ElementStyle="{StaticResource ColumnElementStyle}" Header="Name" Binding="{Binding Name}" IsReadOnly="True"/>
                                <DataGridTemplateColumn Width="*" Header="Start Date">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding DateStarted, StringFormat=MM/dd/yyyy}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <DatePicker SelectedDate="{Binding DateStarted}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Width="*" Header="End Date">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding DateFinished, StringFormat=MM/dd/yyyy}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <DatePicker SelectedDate="{Binding DateFinished}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                    <Grid Grid.Row="2">
                        <Viewbox HorizontalAlignment="Right">
                            <Button Style="{DynamicResource ButtonMinus}" Command="{Binding RemoveCommand}" IsEnabled="{Binding RemoveMode}" >
                                
                            </Button>
                        </Viewbox>
                    </Grid>
                </Grid>

            </Grid>
                
                
                
                
                


            </Grid>






            <!--<Label HorizontalAlignment="Center" VerticalAlignment="Center" Style="{StaticResource Header}" Content="C r e a t e  P r o j e c t" Width="235" Grid.Row="0" Margin="0,-2,565,11" Height="32"/>


        <Label Style="{StaticResource TextField}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="4,6,0,0" Content="Project Name" Height="28" Grid.Row="1" Width="96"/>
        <ComboBox x:Name="cbProjectName"  IsEditable="True" IsReadOnly="True" Text=" Select Project " ItemsSource="{Binding ProjectList}" DisplayMemberPath="ProjectName" SelectedValue="{Binding SelectedProject}"
                               SelectedValuePath="ProjectID"  Margin="100,9,0,0" Width="165" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1"/>
        <Label Style="{StaticResource TextField}" HorizontalAlignment="Left" VerticalAlignment="Top"  Margin="287,8,0,0" Content="ID" Width="33" Grid.Row="1"/>
        <TextBox Background="LightGray" Text="{Binding SelectedProject.ProjectID}" HorizontalAlignment="Left" VerticalAlignment="Top"  Margin="320,9,0,0" Width="48" Grid.Row="1" RenderTransformOrigin="0.527,0.522" />
        <Label Style="{StaticResource TextField}" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="390,7,0,0" Content="Category" Height="26" Width="66"/>
        <TextBox 
             Background="LightGray"
             Grid.Row="1"  Margin="455,9,0,0" Width="105" HorizontalAlignment="Left" IsEnabled="False" Text="{Binding SelectedProject.Category}"  VerticalAlignment="Top" Height="22">
        </TextBox>
        <Button x:Name="btnCreate" Style="{StaticResource FunctionButton}" Content="C R E A T E" Command="{Binding CreateCommand}" HorizontalAlignment="Center" Margin="536,249,184,81" Width="80" Grid.Row="2" />

       
        <Grid Grid.Row="1" Margin="10,68,10,81" Grid.RowSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="450"/>
            </Grid.ColumnDefinitions>

          
            <StackPanel Grid.Column="0">
                <Label BorderBrush="White" BorderThickness="2" Height="30" Content="All Employees" Background="#FFB00800" Foreground="White" HorizontalContentAlignment="Center" FontWeight="Bold"/>
                <ListView ItemsSource="{Binding EmployeeList}" SelectedItem="{Binding SelectedEmployee}" Height="285" Width="200">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn DisplayMemberBinding="{Binding Name}" Header="Name" Width="190"/>
                        </GridView>
                    </ListView.View>
                </ListView>

            </StackPanel>


       
            <StackPanel Grid.Column="1" VerticalAlignment="Center" Height="81" Margin="0,136,4,136">
                <Button x:Name="btnAdd" Style="{StaticResource FunctionButton}" Command="{Binding AddCommand}" IsEnabled="{Binding AddMode}" Content="A D D" Width="80" Margin="5,2,5,2" />
                <Button Style="{StaticResource FunctionButton}" Command="{Binding RemoveCommand}" IsEnabled="{Binding RemoveMode}" Content="R E M O V E" Width="80" Margin="5,2,5,2"/>
                <Button Style="{StaticResource FunctionButton}" Command="{Binding ClearCommand}" IsEnabled="{Binding ClearMode}" Content="C L E A R" Width="80" Margin="5,2,5,2"/>
            </StackPanel>

           
            <StackPanel Grid.Column="2">
                <Label BorderBrush="White" BorderThickness="2" FontWeight="Bold" Style="{StaticResource TextField}" Content="Assigned to Project" Background="#FFB00800" Foreground="White" Margin="0,0,1,0" Height="30"/>
                <ListView ItemsSource="{Binding AssignedEmployeeList}" SelectedItem="{Binding SelectedAssignedEmployee}" Height="286">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn DisplayMemberBinding="{Binding Name}" Header="Name" Width="130"/>
                            <GridViewColumn Header="Start Date" Width="157">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <DatePicker Width="145" SelectedDate="{Binding DateStarted}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="End Date" Width="157">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <DatePicker Width="145" SelectedDate="{Binding DateFinished}"  />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
            </StackPanel>
        </Grid>
        <TextBox
            Background="LightGray"
            Grid.Row="1"  Margin="650,9,0,0" Width="121" HorizontalAlignment="Left" IsEnabled="False" Text="{Binding SelectedProject.Billability}" VerticalAlignment="Top" Height="22">
        </TextBox>
        <Label Style="{StaticResource TextField}" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="585,8,0,0" Content="Billability " Height="26" Width="66"/>
        <Button Content="ADD NEW" HorizontalAlignment="Left" Margin="681,17,0,0" VerticalAlignment="Top" Width="75"/>-->


       
    </Border>
</Page>
